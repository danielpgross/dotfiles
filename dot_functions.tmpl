{{ if eq .chezmoi.os "darwin" -}}
genpw() {
  pwgen -cnyB1 ${1:-16} -r \"\'\[\]\{\}\\\` | tr -d '\n' | pbcopy
  _tmp=`pbpaste`
  echo "$_tmp (copied to clipboard)"
}

set_vscode_file_assocs() {
  # source: https://www.darraghoriordan.com/2021/09/15/vscode-default-text-files-mac
  duti -s com.microsoft.VSCode public.json all
  duti -s com.microsoft.VSCode public.plain-text all
  duti -s com.microsoft.VSCode public.python-script all
  duti -s com.microsoft.VSCode public.shell-script all
  duti -s com.microsoft.VSCode public.source-code all
  duti -s com.microsoft.VSCode public.text all
  duti -s com.microsoft.VSCode public.unix-executable all
  # this works for files without a filename extension
  duti -s com.microsoft.VSCode public.data all
  duti -s com.microsoft.VSCode .c all
  duti -s com.microsoft.VSCode .cpp all
  duti -s com.microsoft.VSCode .cs all
  duti -s com.microsoft.VSCode .css all
  duti -s com.microsoft.VSCode .go all
  duti -s com.microsoft.VSCode .java all
  duti -s com.microsoft.VSCode .js all
  duti -s com.microsoft.VSCode .sass all
  duti -s com.microsoft.VSCode .scss all
  duti -s com.microsoft.VSCode .less all
  duti -s com.microsoft.VSCode .vue all
  duti -s com.microsoft.VSCode .cfg all
  duti -s com.microsoft.VSCode .json all
  duti -s com.microsoft.VSCode .jsx all
  duti -s com.microsoft.VSCode .log all
  duti -s com.microsoft.VSCode .lua all
  duti -s com.microsoft.VSCode .md all
  duti -s com.microsoft.VSCode .php all
  duti -s com.microsoft.VSCode .pl all
  duti -s com.microsoft.VSCode .py all
  duti -s com.microsoft.VSCode .rb all
  duti -s com.microsoft.VSCode .ts all
  duti -s com.microsoft.VSCode .tsx all
  duti -s com.microsoft.VSCode .txt all
  duti -s com.microsoft.VSCode .conf all
  duti -s com.microsoft.VSCode .yaml all
  duti -s com.microsoft.VSCode .yml all
  duti -s com.microsoft.VSCode .toml all
}

{{ end -}}

shrinkpdf() {
  TMPPDF_FILENAME="orig_${1}"
  cp "${1}" "$TMPPDF_FILENAME"
  gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile="${1}" "$TMPPDF_FILENAME"
  echo "$(du -sh "$TMPPDF_FILENAME" | cut -f1) -> $(du -sh "${1}" | cut -f1)"
  rm "$TMPPDF_FILENAME"
}

decryptpdf() {
  echo "Enter password followed by <enter> followed by <ctrl-D>"
  qpdf --decrypt --password-file=- --replace-input "${1}"
}