. ~/.functions
. ~/.aliases
. ~/.exports

eval "$(starship init zsh)"

function set_win_title(){
  if [[ -n $SSH_CLIENT ]]; then
    print -Pn "\e]1;%m:%~\a"
  else
    print -Pn "\e]1;%~\a"
  fi
}
precmd_functions+=(set_win_title)

{{ if and (eq .chezmoi.os "darwin") (eq (index . "isDev") true) -}}
# chruby
source /opt/homebrew/opt/chruby/share/chruby/chruby.sh
chruby ruby-3
{{ end -}}

{{ if eq (index . "isDev") true -}}
# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
{{ end -}}

# br convenience function for broot
function br {
  local cmd cmd_file code
  cmd_file=$(mktemp)
  if broot --outcmd "$cmd_file" "$@"; then
    cmd=$(<"$cmd_file")
    command rm -f "$cmd_file"
    eval "$cmd"
  else
    code=$?
    command rm -f "$cmd_file"
    return "$code"
  fi
}

{{ if eq .chezmoi.os "darwin" -}}
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{ else if eq .chezmoi.os "linux" -}}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{ end -}}

eval "$(atuin init zsh --disable-up-arrow)"